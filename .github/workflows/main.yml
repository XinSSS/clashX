name: ClashX

on: [push]

jobs:
  build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: import certs
      run: |
        openssl aes-256-cbc -k  "${{ secrets.ENCRYPTION_SECRET }}" -in ".github/certs/cert.p12.enc" -d -out ".github/certs/cert.p12"
        openssl aes-256-cbc -k  "${{ secrets.ENCRYPTION_SECRET }}" -in ".github/certs/codesign.p12.enc" -d -out ".github/certs/codesign.p12"
        gem install bundler:1.16.2
        bundle install

    - name: setup Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.x

    - name: build
      env:
        CODE_SIGN_IDENTITY: "Apple Development: shaoreceive@outlook.com (6VT57CBDXM)"
      run: |
        bash install_dependency.sh
        cd ClashX
        python3 add_build_info.py
        cd ..
        bundle exec fastlane build
        echo "Checking SMJobBless Vailded"
        python SMJobBlessUtil.py check ClashX.app
        echo "Check done"

    - name: setup node
      if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[appcenter]')
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: create dmg
      if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[appcenter]')
      run: |
        npm install --global create-dmg
        cp -R ClashX.app ClashXR.app
        create-dmg ClashXR.app
        mv ClashX*.dmg ClashX.dmg

    - name: upload build to github
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ClashX.dmg
        # draft: true
        # prerelease: true

    - name: update gitpage
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITPAGE_TOKEN }}
      run: 'curl -u XinSSS:$GITHUB_TOKEN -X POST https://api.github.com/repos/XinSSS/clashX/pages/builds -H "Accept: application/vnd.github.mister-fantastic-preview+json"'

    - name: upload crashlytics symbols
      if: startsWith(github.ref, 'refs/tags/')  || contains(github.event.head_commit.message, '[appcenter]')
      run: bundle exec fastlane run upload_symbols_to_crashlytics

